Titanic-dataset<-read.csv("Titanic - Modified.csv")
Titanic-dataset< -read.csv("Titanic - Modified.csv")
Titanic-dataset <- read.csv("Titanic - Modified.csv")
Titanic-dataset<-read.csv("Titanic - Modified.csv")
Titanic<-read.csv("Titanic - Modified.csv")
print(Titanic)
Titanic<-read.csv("Titanic - Modified.csv")
print(Titanic)
Titanic<-read.csv("Titanic - Modified.csv")
print(Titanic)
Titanic<-read.csv("Titanic - Modified.csv")
print(Titanic)
colSums(is.na(Titanic))
missing_values <- is.na(Titanic)
print(missing_values)
missing_values <- colSums(is.na(Titanic))
print(missing_values)
Titanic <- mutate(Titanic, Class = na_if(Class, ""), OtherColumn = na_if(OtherColumn, ""))
Titanic <- Titanic %>% mutate(Class = na_if(Class, ""), OtherColumn = na_if(OtherColumn, ""))
library(dplyr)
install.packages("dplyr")
Titanic <- mutate(Titanic, Class = na_if(Class, ""), OtherColumn = na_if(OtherColumn, ""))
library(dplyr)
Titanic <- mutate(Titanic, Class = na_if(Class, ""), OtherColumn = na_if(OtherColumn, ""))
rlang::last_trace()
Titanic <- mutate(Titanic, Class = na_if(Class, ""), OtherColumn = na_if(OtherColumn, ""))
Titanic <- mutate(Titanic, PassengerClass = na_if(PassengerClass, ""), OtherColumn = na_if(OtherColumn, ""))
Titanic <- mutate(Titanic, PassengerClass = na_if(PassengerClass, ""), OtherColumn = na_if(OtherColumn, ""))
colnames(Titanic)
Titanic <- mutate(Titanic, gender = na_if(gender, "")
)
Titanic <- mutate(Titanic, gender = na_if(gender, ""))
Titanic <- read.csv("Titanic - Modified.csv", na.strings = "")
library(dplyr)
Titanic <- Titanic %>% mutate_all(~na_if(.,""))
library(dplyr)
# Convert 'gender' column to character
data$gender <- as.character(data$gender)
library(dplyr)
# Convert 'gender' column to character
Titanic$gender <- as.character(Titanic$gender)
# Replace empty cells with NA in 'gender' column
Titanic <- mutate(Titanic, gender = na_if(gender, ""))
print(Titanic)
library(dplyr)
# Convert 'gender' column to character
Titanic$age <- as.character(Titanic$age)
# Replace empty cells with NA in 'gender' column
Titanic <- mutate(Titanic, age = na_if(age, ""))
print(Titanic)
print(Titanic)
Titanic-dataset<-read.csv("Titanic - Modified.csv")
print(Titanic)
Titanic<-read.csv("Titanic - Modified.csv")
print(Titanic)
options(max.print = 251)
print(Titanic)
View(Titanic)
print(Titanic)
options(max.print = 150)
print(Titanic)
options(max.print = 2511)
print(Titanic)
library(dplyr)
# Convert 'gender' column to character
Titanic$age <- as.character(Titanic$age)
# Replace empty cells with NA in 'gender' column
Titanic <- mutate(Titanic, age = na_if(age, ""))
# Replace blank cells with NA in the entire dataset
dataset <- replace(dataset, dataset == "", NA)
# Replace blank cells with NA in the entire dataset
Titanic <- replace(Titanic, Titanic == "", NA)
print(Titanic)
heatmap(is.na(Titanic), col = c("white", "red"), main = "NA Columns Heatmap")
# Create a heatmap to highlight NA columns
heatmap(as.numeric(is.na(Titanic)), col = c("white", "red"), main = "NA Columns Heatmap")
heat.colors()
df[!complete.cases(df), ]
print(Titanic)
print(Titanic)
print(Titanic)
options(max.print = 2511)
print(titanic)
print(Titanic)
missing_values<-colSums(is.na(Titanic))
print(missing_values)
Titanic$gender <- ifalse(is.na(Titanic$gender),mean(Titanic@gender, na.rm = TRUE),Titanic$gender)
Titanic$gender <- ifelse(is.na(Titanic$gender),mean(Titanic@gender, na.rm = TRUE),Titanic$gender)
print(Titanic)
Titanic$gender <- ifelse(is.na(Titanic$gender),mean(Titanic@gender, na.rm = TRUE),Titanic$gender)
Titanic$gender <- ifelse(is.na(Titanic$gender), mean(Titanic$gender, na.rm = TRUE), Titanic$gender)
print(Titanic)
dataset$column_name <- ifelse(is.na(dataset$column_name), mean(dataset$column_name, na.rm = TRUE), dataset$column_name)
Titanic$gender <- ifelse(is.na(Titanic$gender), mean(Titanic$gender, na.rm = TRUE), Titanic$gender)
Titanic$age <- ifelse(is.na(Titanic$age), mean(Titanic$age, na.rm = TRUE), Titanic$age)
Titanic$age <- ifelse(is.na(Titanic$age), mean(Titanic$age, na.rm = TRUE), Titanic$age)
Titanic$age <- as.numeric(as.character(Titanic$age))
mean_age <- mean(Titanic$age, na.rm = TRUE)
Titanic$age[is.na(Titanic$age) | !is.finite(Titanic$age)] <- mean_age
print(Titanic)
print(Titanic)
View(Titanic)
Titanic$age[is.na(Titanic$age) | !is.finite(Titanic$age)] <- mean_age
print(Titanic)
print(Titanic)
print(Titanic)
print(Titanic)
Titanic$gender <-as.numeric(format(round(Titanic$gender,0)))
Titanic$age <-as.numeric(format(round(Titanic$age,0)))
Titanic$fare <-as.numeric(format(round(Titanic$fare,2)))
print(Titanic)
plot(Titanic$gender, col=5)
print(Titanic)
plot(Titanic$gender, col=2)
plot(Titanic$gender, col=.5)
plot(Titanic$gender, col=1)
plot(Titanic$gender, col=10)
plot(Titanic$gender, col=.9)
plot(Titanic$gender, col=.1)
plot(Titanic$gender, col=.1.2)
plot(Titanic$gender, col=1.2)
plot(Titanic$gender, col=1.2)
gender_counts <-table(Titanic$gender)
barplot(gender_counts,names.arg = c("0","1")
barplot(gender_counts,names.arg = c("0","1"))
barplot(gender_counts,names.arg = c("0","1"))
gender_counts <-table(Titanic$gender)
barplot(gender_counts,names.arg = c("0","1"))
barplot(gender_counts,names.arg = c("0","1"))
barplot(gender_counts,names.arg = c("0","1"),xlab = "gender index", ylab = "gender counts"
barplot(gender_counts,names.arg = c("0","1"),xlab = "gender index", ylab = "gender counts")
barplot(gender_counts,names.arg = c("0","1"),xlab = "gender index", ylab = "gender counts"))
barplot(gender_counts,names.arg = c("0","1"),xlab = "gender index", ylab = "gender counts")))
barplot(gender_counts,names.arg = c("0","1"),xlab = "gender index", ylab = "gender counts")
text(x=1:length(gender index), y=gender_counts)
text(x=1:length(gender index), y=gender_counts))
text(x=1:length(gender), y=gender_counts))
text(x=1:length(gender), y=gender_counts)
text(x=1:length(gender index), y=gender_counts)
text(x=1:length(gender index), y=gender_counts)
barplot(gender_counts,names.arg = c("0","1"),xlab = "gender_index", ylab = "gender counts")
barplot(gender_counts,names.arg = c("0","1"),xlab = "gender_index", ylab = "gender counts")
barplot(gender_counts,names.arg = c("0","1"),xlab = "gender_index", ylab = "gender_counts")
text(x=1:length(gender_index), y=gender_counts)
text(x=length(gender_index), y=gender_counts)
text(y=length (gender_counts)
text(y=length (gender_counts))
text(y=1:length (gender_counts))
text(x=1:length (gender_counts))
barplot(gender_counts,names.arg = c("0","1"),xlab = "gender_index", ylab = "gender_counts")
gender_counts <-table(Titanic$gender)
barplot(gender_counts,names.arg = c("0","1")
gender_counts <-table(Titanic$gender)
gender_counts <-table(Titanic$gender)
barplot(gender_counts,names.arg = c("0","1"))
barplot(gender_counts,names.arg = c("0","1"),xlab = "gender_index", ylab = "gender_counts")
barplot(gender_counts,names.arg = c("0","1"),xlab = "gender index", ylab = "gender counts")
gender_counts <-table(Titanic$gender)
barplot(gender_counts,names.arg = c("0","1"),xlab = "gender index", ylab = "gender counts")
plot(Titanic$age,col=5)
plot(Titanic$age,col=10)
plot(Titanic$age,col=100)
plot(Titanic$age,col=10)
plot(Titanic$age,col=5)
plot(Titanic$age,col=5)
plot(Titanic$fare,col=5)
mean(Titanic$gender)
median(Titanic$gender)
var(Titanic$gender)
sd(Titanic$gender)
mean(Titanic$age)
median(Titanic$age)
var(Titanic$age)
sd(Titanic$age)
mean(Titanic$fare)
mean(Titanic$fare)
mean(Titanic$fare)
median(Titanic$fare)
var(Titanic$fare)
sd(Titanic$fare)
barplot(age,names.arg = c("0","1"),xlab = "gender index", ylab = "gender counts")
hist(Titanic$age,breaks ="Sturges",col="blue",xlab="Age",ylab = Counts, main = "Histogram of age")
hist(Titanic$age,breaks ="Sturges",col="blue",xlab="Age",ylab = "Counts", main = "Histogram of age")
hist(Titanic$age,breaks ="Sturges",col="blue",xlab="Age",ylab = "Counts", main = "Histogram of age")
# Create a histogram for age with 10 intervals
hist(Titanic$age, breaks = 10, col = "blue",
xlab = "Age", ylab = "Frequency", main = "Histogram of Age")
# Create a histogram for age with 10 intervals
hist(Titanic$age, breaks = 10, col = "blue",
xlab = "Age", ylab = "Frequency", main = "Histogram of Age")
# Create a histogram for age with 10 intervals
hist(Titanic$age, breaks = 10, col = "blue",
xlab = "Age", ylab = "Frequency", main = "Histogram of Age")
# Create a histogram for age with 10 intervals
hist(Titanic$age, breaks = 10, col = "blue",
xlab = "Age", ylab = "Frequency", main = "Histogram of Age")
hist.default(Titanic$age, breaks = 10, col = "blue",
xlab = "Age", ylab = "Frequency", main = "Histogram of Age")
hist.default(Titanic$age, breaks = 10, col = "blue",
xlab = "Age", ylab = "Frequency", main = "Histogram of Age")
hist(Titanic$age, breaks = 10, col = "blue",
xlab = "Age", ylab = "Frequency", main = "Histogram of Age")
hist(Titanic$age, breaks = 10, col = "blue",
xlab = "Age", ylab = "Frequency", main = "Histogram of Age")
hist(Titanic$age)
hist(Titanic$fare)
hist(Titanic$fare)
hist(Titanic$gender)
hist(Titanic$age)
hist(Titanic$fare)
install.packages("deplyr")
install.packages("matrixStats")
library(matrixStats)
library(deplyr)
library(dplyr)
Titanic%>% summarise_if(is.number,sd)
Titanic%>% summarise_if(is.numeric,sd)
Titanic%>% summarise_if(is.numeric,sd)
print(Titanic)
options(max.print = 2511)
print(Titanic)
print(Titanic)
sibsp_count<-table(Titanic$sibsp)
barplot(sibsp_count,names.arg = c("0","1","2","3","4","5","6","7","8","9","10"),xlab = "Sibling spouse index", ylab = "Sibling spouse count")
barplot(sibsp_count,names.arg = c("0","1","2","3","4","5","6","7","8","9","10"),xlab = "Sibling spouse index", ylab = "Sibling spouse count")
barplot(sibsp_count,names.arg = c("0","1"),xlab = "Sibling spouse index", ylab = "Sibling spouse count")
barplot(sibsp_count,names.arg = c("0","1"),xlab = "Sibling_spouse_index", ylab = "Sibling_spouse_count")
barplot(sibsp_count,names.arg = c("0","1"),xlab = "Sibling_spouse_index", ylab = "sibsp_count")
barplot(sibsp_count,names.arg = c("0","1"),xlab = "", ylab = "sibsp_count")
barplot(sibsp_count,names.arg = c("0","1"),xlab = "", ylab = "sibsp_count")
# Calculate the counts for each category in the "sibsp" attribute
sibsp_count <- table(Titanic$sibsp)
# Create a bar plot with appropriate names for the categories
barplot(sibsp_count,
names.arg = c("0", "1", "2", "3", "4", "5", "8"),
xlab = "sibsp",
ylab = "Count",
main = "Distribution of sibsp")
barplot(sibsp_count, names.arg = c("0", "1", "2", "3", "4", "5", "8"),
xlab = "sibsp",
ylab = "Count",
main = "Distribution of sibsp")
plot(Titanic$sibsp, col=2)
plot(Titanic$sibsp, col=5)
plot(Titanic$parch, col=5)
plot(Titanic$parch, col=5)
plot(Titanic$survived, col=5)
plot(Titanic$survived, col=10)
plot(Titanic$survived, col=100)
# Calculate the counts for each category in the "survived" attribute
survived_count <- table(Titanic$survived)
# Create a bar plot to visualize the survival distribution
barplot(survived_count,
names.arg = c("No", "Yes"),
xlab = "Survived",
ylab = "Count",
main = "Distribution of Survival")
barplot(survived_count,
names.arg = c("No", "Yes"),
xlab = "Survived",
ylab = "Count",
main = "Distribution of Survival")
plot(Titanic$sibsp, col=5)
# Calculate the counts for each category in the "parch" attribute
parch_count <- table(Titanic$parch)
# Create a bar plot to visualize the distribution of "parch"
barplot(parch_count,
xlab = "parch",
ylab = "Count",
main = "Distribution of parch")
# Subset the Titanic dataset to include 250 data points
subset_data <- Titanic[1:250, ]
# Calculate the counts for each category in the "parch" attribute
parch_count <- table(subset_data$parch)
# Create a bar plot to visualize the distribution of "parch" with 250 data points
barplot(parch_count,
xlab = "parch",
ylab = "Count",
main = "Distribution of parch (250 data points)")
barplot(parch_count,
xlab = "parch",
ylab = "Count",
main = "Distribution of parch")
# Create a histogram for the "fare" attribute
hist(Titanic$fare,
col = "blue",
xlab = "Fare",
ylab = "Frequency",
main = "Histogram of Fare")
